# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/mirzai/',
                'doc_host': 'https://franckalbinet.github.io',
                'git_url': 'https://github.com/franckalbinet/mirzai/',
                'lib_path': 'mirzai'},
  'syms': { 'mirzai.data.loading': {'mirzai.data.loading.load_kssl': ('api/data/loading.html#load_kssl', 'mirzai/data/loading.py')},
            'mirzai.data.selection': { 'mirzai.data.selection.get_y_by_order': ( 'api/data/selection.html#get_y_by_order',
                                                                                 'mirzai/data/selection.py'),
                                       'mirzai.data.selection.select_X': ('api/data/selection.html#select_x', 'mirzai/data/selection.py'),
                                       'mirzai.data.selection.select_tax_order': ( 'api/data/selection.html#select_tax_order',
                                                                                   'mirzai/data/selection.py'),
                                       'mirzai.data.selection.select_y': ('api/data/selection.html#select_y', 'mirzai/data/selection.py')},
            'mirzai.data.torch': { 'mirzai.data.torch.DataLoaders': ('api/data/torch.html#dataloaders', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.DataLoaders.__init__': ('api/data/torch.html#__init__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.DataLoaders.loaders': ('api/data/torch.html#loaders', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.Noop': ('api/data/torch.html#noop', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.Noop.__call__': ('api/data/torch.html#__call__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.Noop.__init__': ('api/data/torch.html#__init__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SNV_transform': ('api/data/torch.html#snv_transform', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SNV_transform.__call__': ('api/data/torch.html#__call__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SNV_transform.__init__': ('api/data/torch.html#__init__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SpectralDataset': ('api/data/torch.html#spectraldataset', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SpectralDataset.__getitem__': ( 'api/data/torch.html#__getitem__',
                                                                                      'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SpectralDataset.__init__': ('api/data/torch.html#__init__', 'mirzai/data/torch.py'),
                                   'mirzai.data.torch.SpectralDataset.__len__': ('api/data/torch.html#__len__', 'mirzai/data/torch.py')},
            'mirzai.data.transform': { 'mirzai.data.transform.DropSpectralRegions': ( 'api/data/transform.html#dropspectralregions',
                                                                                      'mirzai/data/transform.py'),
                                       'mirzai.data.transform.DropSpectralRegions.__init__': ( 'api/data/transform.html#__init__',
                                                                                               'mirzai/data/transform.py'),
                                       'mirzai.data.transform.DropSpectralRegions._exists': ( 'api/data/transform.html#_exists',
                                                                                              'mirzai/data/transform.py'),
                                       'mirzai.data.transform.DropSpectralRegions._sanitize': ( 'api/data/transform.html#_sanitize',
                                                                                                'mirzai/data/transform.py'),
                                       'mirzai.data.transform.DropSpectralRegions.fit': ( 'api/data/transform.html#fit',
                                                                                          'mirzai/data/transform.py'),
                                       'mirzai.data.transform.DropSpectralRegions.transform': ( 'api/data/transform.html#transform',
                                                                                                'mirzai/data/transform.py'),
                                       'mirzai.data.transform.SNV': ('api/data/transform.html#snv', 'mirzai/data/transform.py'),
                                       'mirzai.data.transform.SNV.__init__': ( 'api/data/transform.html#__init__',
                                                                               'mirzai/data/transform.py'),
                                       'mirzai.data.transform.SNV.fit': ('api/data/transform.html#fit', 'mirzai/data/transform.py'),
                                       'mirzai.data.transform.SNV.transform': ( 'api/data/transform.html#transform',
                                                                                'mirzai/data/transform.py'),
                                       'mirzai.data.transform.TakeDerivative': ( 'api/data/transform.html#takederivative',
                                                                                 'mirzai/data/transform.py'),
                                       'mirzai.data.transform.TakeDerivative.__init__': ( 'api/data/transform.html#__init__',
                                                                                          'mirzai/data/transform.py'),
                                       'mirzai.data.transform.TakeDerivative.fit': ( 'api/data/transform.html#fit',
                                                                                     'mirzai/data/transform.py'),
                                       'mirzai.data.transform.TakeDerivative.transform': ( 'api/data/transform.html#transform',
                                                                                           'mirzai/data/transform.py'),
                                       'mirzai.data.transform.log_transform_y': ( 'api/data/transform.html#log_transform_y',
                                                                                  'mirzai/data/transform.py')},
            'mirzai.training.cnn': { 'mirzai.training.cnn.Learner': ('api/training/cnn.html#learner', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner._MCDropoutOn': ( 'api/training/cnn.html#_mcdropouton',
                                                                                   'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner.__init__': ('api/training/cnn.html#__init__', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner._init_losses': ( 'api/training/cnn.html#_init_losses',
                                                                                   'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner._npify': ('api/training/cnn.html#_npify', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner._to_device': ( 'api/training/cnn.html#_to_device',
                                                                                 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner.eval': ('api/training/cnn.html#eval', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner.fit': ('api/training/cnn.html#fit', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner.lr_finder': ('api/training/cnn.html#lr_finder', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learner.predict': ('api/training/cnn.html#predict', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners': ('api/training/cnn.html#learners', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners.__init__': ('api/training/cnn.html#__init__', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners._filter': ('api/training/cnn.html#_filter', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners._get_generators': ( 'api/training/cnn.html#_get_generators',
                                                                                       'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners.evaluate': ('api/training/cnn.html#evaluate', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Learners.train': ('api/training/cnn.html#train', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Model': ('api/training/cnn.html#model', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Model.__init__': ('api/training/cnn.html#__init__', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Model.forward': ('api/training/cnn.html#forward', 'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.Model.make_convpool_block': ( 'api/training/cnn.html#make_convpool_block',
                                                                                        'mirzai/training/cnn.py'),
                                     'mirzai.training.cnn.weights_init': ('api/training/cnn.html#weights_init', 'mirzai/training/cnn.py')},
            'mirzai.training.core': { 'mirzai.training.core.is_plateau': ('api/training/core.html#is_plateau', 'mirzai/training/core.py'),
                                      'mirzai.training.core.load_dumps': ('api/training/core.html#load_dumps', 'mirzai/training/core.py')},
            'mirzai.training.metrics': { 'mirzai.training.metrics.eval_reg': ( 'api/training/metrics.html#eval_reg',
                                                                               'mirzai/training/metrics.py'),
                                         'mirzai.training.metrics.lccc': ('api/training/metrics.html#lccc', 'mirzai/training/metrics.py'),
                                         'mirzai.training.metrics.mape': ('api/training/metrics.html#mape', 'mirzai/training/metrics.py'),
                                         'mirzai.training.metrics.rpd': ('api/training/metrics.html#rpd', 'mirzai/training/metrics.py'),
                                         'mirzai.training.metrics.rpiq': ('api/training/metrics.html#rpiq', 'mirzai/training/metrics.py'),
                                         'mirzai.training.metrics.stb': ('api/training/metrics.html#stb', 'mirzai/training/metrics.py')},
            'mirzai.training.plsr': { 'mirzai.training.plsr.Learner': ('api/training/plsr.html#learner', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learner.__init__': ( 'api/training/plsr.html#__init__',
                                                                                 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learner.evaluate': ( 'api/training/plsr.html#evaluate',
                                                                                 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learner.find_hp': ('api/training/plsr.html#find_hp', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learner.fit': ('api/training/plsr.html#fit', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners': ('api/training/plsr.html#learners', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners.__init__': ( 'api/training/plsr.html#__init__',
                                                                                  'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners._filter': ( 'api/training/plsr.html#_filter',
                                                                                 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners._splitter': ( 'api/training/plsr.html#_splitter',
                                                                                   'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners.evaluate': ( 'api/training/plsr.html#evaluate',
                                                                                  'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.Learners.train': ('api/training/plsr.html#train', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.PLS_model': ('api/training/plsr.html#pls_model', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.PLS_model.__init__': ( 'api/training/plsr.html#__init__',
                                                                                   'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.PLS_model.eval': ('api/training/plsr.html#eval', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.PLS_model.fit': ('api/training/plsr.html#fit', 'mirzai/training/plsr.py'),
                                      'mirzai.training.plsr.PLS_model.predict': ( 'api/training/plsr.html#predict',
                                                                                  'mirzai/training/plsr.py')},
            'mirzai.vis.core': { 'mirzai.vis.core.plot_capacity': ('api/vis/core.html#plot_capacity', 'mirzai/vis/core.py'),
                                 'mirzai.vis.core.plot_learning_curve': ('api/vis/core.html#plot_learning_curve', 'mirzai/vis/core.py'),
                                 'mirzai.vis.core.plot_spectra': ('api/vis/core.html#plot_spectra', 'mirzai/vis/core.py'),
                                 'mirzai.vis.core.plot_validation_curve': ('api/vis/core.html#plot_validation_curve', 'mirzai/vis/core.py'),
                                 'mirzai.vis.core.set_style': ('api/vis/core.html#set_style', 'mirzai/vis/core.py'),
                                 'mirzai.vis.core.summary_plot': ('api/vis/core.html#summary_plot', 'mirzai/vis/core.py')}}}